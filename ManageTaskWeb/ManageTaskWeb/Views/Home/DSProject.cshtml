@{
    ViewBag.Title = "DSProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/Content/css/styleproject.css?v=1")" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div>
    <div class="container">
        <div class="header">
            <div>
                <a href="/Home/TrangChu"><i class="fas fa-home"></i> Home</a> > <a href="#">Projects</a>
            </div>
            <div class="action-buttons">
                @if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Manager"))
                {
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProjectModal">
                        <i class="fas fa-plus-circle"></i> Thêm Dự Án Mới
                    </button>
                    <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#joinProjectModal">
                        <i class="fas fa-edit"></i> Tham gia dự án
                    </button>

                }
                else
                {
                    <button class="btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#joinProjectModal">
                        <i class="fas fa-edit"></i> Tham gia dự án
                    </button>

                }
            </div>

        </div>

        <div class="search-bar">
            <input type="text" id="projectSearchInput" placeholder="Enter project name or project ID...">
            <button type="button" id="searchBtn"><i class="fas fa-search"></i></button>
        </div>
        <div class="filter">
            <button class="btn btn-outline-secondary" id="btnPending">Pending</button>
            <button class="btn btn-outline-primary" id="btnInProgress">In Progress</button>
            <button class="btn btn-outline-success" id="btnCompleted">Completed</button>
        </div>

        <!-- Project Table -->
        <table class="project-table table table-striped">
            <thead>
                <tr>
                    <th>Select</th>
                    <th>Image</th>
                    <th>Project Name</th>
                            <th class="sortable" data-sort="start">Start <i class="fas fa-sort"></i></th>
        <th class="sortable" data-sort="end">End <i class="fas fa-sort"></i></th>
                    <th>Thành viên</th>
                    <th>Số lượng</th>
                    <th>Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="projectTableBody">
                @if (Model != null)
                {
                    foreach (var project in Model)
                    {
                        @Html.AntiForgeryToken()
                        <tr class="project-row" data-status="@project.Status">
                            <td><input type="checkbox" class="project-checkbox" data-project-id="@project.ProjectID"></td>
                            <td>
                                <img src="~/Content/images/project-img/@project.ImageProject" alt="Project Image" width="80">
                                <div class="action-buttons">
                                    @if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Manager"))
                                    {
                                        <button class="btn btn-outline-secondary edit-project-btn"
                                                data-bs-toggle="modal"
                                                data-bs-target="#editProjectModal"
                                                data-project-id="@project.ProjectID"
                                                data-project-name="@project.ProjectName"
                                                data-project-description="@project.Description"
                                                data-start-date="@project.StartDate.ToString("yyyy-MM-dd")"
                                                data-end-date="@project.EndDate.ToString("yyyy-MM-dd")"
                                                data-priority="@project.Priority"
                                                data-status="@project.Status">
                                            <i class="fas fa-pencil-alt"></i> <span>Edit Project</span>
                                        </button>
                                    }
                                    <a href="@Url.Action("DSTask", "Home", new { projectId = project.ProjectID })" class="btn btn-outline-dark">
                                        <i class="fas fa-eye"></i><span>View Task</span>
                                    </a>
                                </div>
                            </td>
                            <td>
                                <div>
                                    <strong>@project.ProjectName</strong><br>
                                    <span>Project Code: @project.ProjectID</span>
                                </div>
                            </td>
                            <td>@project.StartDate.ToString("dd/MM/yyyy")</td>
                            <td>@project.EndDate.ToString("dd/MM/yyyy")</td>
                            <td>
                                <div class="avatar-group">
                                    <a href="@Url.Action("MembersOfProject", "Home", new { projectId = project.ProjectID })">
                                        <button>abc</button>
                                        @for (int i = 0; i < Math.Min(3, project.Members.Count); i++)
                                        {
                                            var member = project.Members[i];
                                            <img src="~/Content/images/member-img/@member.ImageMember" alt="Team Member" width="30">
                                        }

                                        @if (project.MemberCount > 3)
                                        {
                                            <span>+@(project.MemberCount - 3)</span>
                                        }
                                    </a>
                                </div>
                            </td>





                            <td><span>@project.MemberCount</span></td>
                            <td>
                                <div>
                                    @if (project.Status == "Completed")
                                    {
                                        <span class="status-done">Completed</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning text-dark">@project.Status</span>
                                    }
                                </div>
                            </td>
                            <td>
                                <a href="@Url.Action("GroupChat", "Home", new { projectId = project.ProjectID })" class="btn btn-outline-primary">
                                    <i class="fas fa-comments"></i> Thảo Luận
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9">Không có dự án nào.</td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Add Project Modal -->
        <div class="modal fade" id="addProjectModal" tabindex="-1" aria-labelledby="addProjectModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addProjectModalLabel">Add New Project</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                    </div>

                    <form action="/Home/AddProject" method="post" enctype="multipart/form-data">
                        <div class="modal-body">
                            <!-- Left Column -->
                            <div class="column">
                                <label for="projectName">Project Name *</label>
                                <input type="text" class="form-control" name="ProjectName" id="projectName" placeholder="Name Project..." required>

                                <label for="description">Description *</label>
                                <textarea class="form-control" name="Description" id="description" placeholder="Enter Description..." required></textarea>

                                <label for="startDate">Start Date *</label>
                                <input type="date" class="form-control" name="StartDate" id="startDate" required>

                                <label for="endDate">End Date *</label>
                                <input type="date" class="form-control" name="EndDate" id="endDate" required>
                            </div>

                            <!-- Right Column -->
                            <div class="column">
                                <label for="priority">Priority</label>
                                <div class="custom-dropdown">
                                    <div class="selected-option" onclick="toggleDropdown()">
                                        <span id="selectedPriority">Medium</span>
                                        <i class="fa-solid fa-bars icon ic3"></i>
                                    </div>
                                    <div class="dropdown-menu" id="priorityDropdown">
                                        <div class="dropdown-item" onclick="selectPriority(1, 'Highest')">
                                            <i class="fa-solid fa-angles-up icon ic1"></i> Highest
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(2, 'High')">
                                            <i class="fa-solid fa-angle-up icon ic2"></i> High
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(3, 'Medium')">
                                            <i class="fa-solid fa-bars icon ic3"></i> Medium
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(4, 'Low')">
                                            <i class="fa-solid fa-angle-down icon ic4"></i> Low
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(5, 'Lowest')">
                                            <i class="fa-solid fa-angles-down icon ic5"></i> Lowest
                                        </div>
                                    </div>
                                    <input type="hidden" name="Priority" id="priorityValue" value="3">
                                </div>

                                <label for="statusProject">Status Project</label>
                                <select class="form-select" name="Status" id="statusProject">
                                    <option>Pending</option>
                                </select>

                                <label for="image">Image</label>
                                <p id="fileName" style="margin: 5px 0; font-size: 0.9em; color: #555;"></p>
                                <button type="button" class="btn-upload" id="uploadBtnAdd" onclick="document.getElementById('imageInputAdd').click();">
                                    <i class="fas fa-upload"></i> Upload
                                </button>
                                <input type="file" name="ImageFile" id="imageInputAdd" style="display: none;" onchange="handleFileUpload()" />
                                <input type="hidden" name="ImageProject" id="imageProject">
                                <img id="previewImage" src="" alt="Preview" style="display: none; margin-top: 10px; width: 100px; height: 100px; border: 1px solid #ddd; object-fit: cover;"> <!-- Hình ảnh xem trước -->




                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Confirm</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Edit Project Modal -->
        <div class="modal fade" id="editProjectModal" tabindex="-1" aria-labelledby="editProjectModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editProjectModalLabel">Edit Project</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                    </div>

                    <form action="/Home/EditProject" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div class="modal-body">
                            <!-- Left Column -->
                            <div class="column">
                                <label for="editProjectID">Project ID</label>
                                <input type="text" class="form-control" name="ProjectID" id="editProjectID" readonly>

                                <label for="editProjectName">Project Name *</label>
                                <input type="text" class="form-control" name="ProjectName" id="editProjectName" placeholder="Name Project..." required>

                                <label for="editDescription">Description *</label>
                                <textarea class="form-control" name="Description" id="editDescription" placeholder="Enter Description..." required></textarea>

                                <label for="editStartDate">Start Date *</label>
                                <input type="date" class="form-control" name="StartDate" id="editStartDate" required>

                                <label for="editEndDate">End Date *</label>
                                <input type="date" class="form-control" name="EndDate" id="editEndDate" required>
                            </div>

                            <!-- Right Column -->
                            <div class="column">
                                <label for="editPriority">Priority</label>
                                <input type="hidden" name="Priority" id="editPriorityValue">
                                <div class="custom-dropdown">
                                    <div class="selected-option">
                                        <span> Medium</span> <i class="fa-solid fa-bars icon ic3"></i>
                                    </div>
                                    <div class="dropdown-menu">
                                        <div class="dropdown-item" onclick="selectPriority(1, 'Highest')">
                                            <i class="fa-solid fa-angles-up icon ic1"></i> Highest
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(2, 'High')">
                                            <i class="fa-solid fa-angle-up icon ic2"></i> High
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(3, 'Medium')">
                                            <i class="fa-solid fa-bars icon ic3"></i> Medium
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(4, 'Low')">
                                            <i class="fa-solid fa-angle-down icon ic4"></i> Low
                                        </div>
                                        <div class="dropdown-item" onclick="selectPriority(5, 'Lowest')">
                                            <i class="fa-solid fa-angles-down icon ic5"></i> Lowest
                                        </div>
                                    </div>
                                </div>

                                <label for="editStatusProject">Status Project</label>
                                <select class="form-select" name="Status" id="editStatusProject">
                                    <option>Pending</option>
                                    <option>In Progress</option>
                                    <option>Completed</option>
                                </select>

                                <label for="editImage">Image</label>
                                <button type="button" class="btn-upload" id="uploadBtnEdit" onclick="document.getElementById('imageInputEdit').click();">
                                    <i class="fas fa-upload"></i> Upload
                                </button>
                                <input type="file" name="ImageFile" id="imageInputEdit" style="display: none;" />
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Success/Error Message Modal -->
        <div id="notificationPopup" style="display: none;">
            <span id="notificationMessage">Notification message here</span>
            <span class="close-btn" onclick="closeNotificationPopup()">×</span>
        </div>

        <!-- Delete Popup -->
        <div class="popup-delete-container" id="popupDeleteContainer" style="display: none;">
            <button class="close-btn" onclick="closeProjectDeletePopup()()">×</button>
            <div class="project-select">
                <span id="projectSelectCount">Select Project</span>
            </div>
            <button class="delete-btn" onclick="deleteSelectedProjects()">
                <i class="fas fa-trash-alt" style="margin-right:5px"></i><span>Delete</span>
            </button>
        </div>

        <!-- Popup xác nhận xóa -->
        <div id="deleteConfirmationPopup" style="display:none;" class="popup-overlay">
            <div class="popup-content">
                <h3>Bạn có chắc chắn muốn xóa các dự án này?</h3>
                <ul id="selectedProjectList"></ul>
                <button id="confirmDeleteBtn" class="confirm-btn">Xác nhận</button>
                <button id="cancelDeleteBtn" class="cancel-btn">Hủy</button>
            </div>
        </div>

        <!-- Popup Nhập mã dự án -->
        <div class="modal fade" id="joinProjectModal" tabindex="-1" aria-labelledby="joinProjectModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="joinProjectModalLabel">Join Project</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" style="display:block">
                        <form id="joinProjectForm">
                            @Html.AntiForgeryToken()
                            <div class="mb-3">
                                <label for="projectCodeInput" class="form-label">Project Code</label>
                                <input type="text" class="form-control" id="projectCodeInput" placeholder="Enter project code" required>
                            </div>
                            <div id="joinProjectError" class="text-danger" style="display:none;"></div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="joinProjectSubmit">Join</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>
    /* --- Sorting Projects - START --- */
document.addEventListener('DOMContentLoaded', function() {
    const headers = document.querySelectorAll('th.sortable');
    headers.forEach(header => {
        header.addEventListener('click', function() {
            const sortType = this.dataset.sort;
            const isAsc = !this.classList.contains('asc');
            
            // Reset all headers
            headers.forEach(h => {
                h.classList.remove('asc', 'desc');
            });
            
            // Set current header sort state
            this.classList.add(isAsc ? 'asc' : 'desc');
            
            // Sort the table
            sortProjects(sortType, isAsc);
        });
    });
});

function sortProjects(sortType, isAsc) {
    const tbody = document.getElementById('projectTableBody');
    const rows = Array.from(tbody.querySelectorAll('tr.project-row'));
    
    rows.sort((a, b) => {
        let dateA, dateB;
        
        if (sortType === 'start') {
            dateA = parseDate(a.children[3].textContent);
            dateB = parseDate(b.children[3].textContent);
        } else if (sortType === 'end') {
            dateA = parseDate(a.children[4].textContent);
            dateB = parseDate(b.children[4].textContent);
        }
        
        return isAsc ? dateA - dateB : dateB - dateA;
    });
    
    // Clear and re-append rows
    rows.forEach(row => tbody.appendChild(row));
}

function parseDate(dateStr) {
    // Convert dd/MM/yyyy to Date object
    const [day, month, year] = dateStr.trim().split('/');
    return new Date(year, month - 1, day);
}
/* --- Sorting Projects - END --- */


        /* --- JoinProject By ID - START --- */
        document.getElementById("joinProjectSubmit").addEventListener("click", function () {
            console.log("Join button clicked"); // Kiểm tra xem có chạy đến đây không
            const projectCode = document.getElementById("projectCodeInput").value.trim();

            if (projectCode === "") {
                showNotificationPopup("Please enter a project code.", "error"); // Hiển thị thông báo lỗi
                return;
            }

            $.ajax({
                url: '/Home/JoinProject',
                type: 'POST',
                data: {
                    projectCode: projectCode,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // Gửi token cùng request
                },
                success: function (response) {
                    console.log(response); // Xem kết quả trả về
                    if (response.success) {
                        showNotificationPopup(response.message, "success"); // Hiển thị thông báo thành công
                        $('#joinProjectModal').modal('hide');
                    } else {
                        showNotificationPopup(response.error, "error"); // Hiển thị thông báo lỗi
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error); // Xem lỗi chi tiết
                    showNotificationPopup("An error occurred while processing your request.", "error"); // Hiển thị thông báo lỗi
                }
            });
        });
        /* ---  JoinProject By ID - END --- */


        /* --- Tim Kiem Theo Ten Project - START   --- */
        // Tạo hàm search riêng để tái sử dụng
        function searchProjects() {
            var input = document.getElementById("projectSearchInput").value.toLowerCase();
            var rows = document.querySelectorAll(".project-row");

            rows.forEach(function (row) {
                var projectName = row.querySelector("td:nth-child(3)").textContent.toLowerCase();
                var projectId = row.querySelector("td:nth-child(3) span").textContent.toLowerCase().replace("project code:", "").trim();
                
                if (projectName.includes(input) || projectId.includes(input)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }

        // Event listener cho nút search
        document.getElementById("searchBtn").addEventListener("click", searchProjects);

        // Event listener cho phím Enter
        document.getElementById("projectSearchInput").addEventListener("keypress", function(event) {
            if (event.key === "Enter") {
                event.preventDefault(); // Ngăn form submit nếu có
                searchProjects();
            }
        });

        /* ---Tim Kiem Theo Ten Project - END   --- */

        /* --- Loc project theo trang thai - START   --- */
        let currentFilter = "All";
        document.getElementById("btnPending").addEventListener("click", function () {
            toggleFilter("Pending");
        });
        document.getElementById("btnInProgress").addEventListener("click", function () {
            toggleFilter("In Progress");
        });
        document.getElementById("btnCompleted").addEventListener("click", function () {
            toggleFilter("Completed");
        });
        function toggleFilter(status) {
            if (currentFilter === status) {
                currentFilter = "All";
                showAllProjects();
            } else {
                currentFilter = status;
                filterProjects(status);
            }
        }
        function filterProjects(status) {
            var rows = document.querySelectorAll(".project-row");

            rows.forEach(function (row) {
                if (row.getAttribute("data-status") === status) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        }
        function showAllProjects() {
            var rows = document.querySelectorAll(".project-row");
            rows.forEach(function (row) {
                row.style.display = "";
            });
        }
        /* --- Loc project theo trang thai - END --- */

        /* --- Delete Popip - START --- */
        function showProjectDeletePopup(selectedCount) {
            var popup = document.getElementById('popupDeleteContainer');
            var projectCountSpan = document.getElementById('projectSelectCount');
            projectCountSpan.textContent = selectedCount + " Project" + (selectedCount > 1 ? "s" : "");

            if (selectedCount > 0) {
                popup.style.display = 'flex';
            } else {
                popup.style.display = 'none';
            }
        }
        function closeProjectDeletePopup() {
            var popup = document.getElementById('popupDeleteContainer');
            popup.style.display = 'none';
            document.querySelectorAll('.project-checkbox').forEach(function (checkbox) {
                checkbox.checked = false;
            });
            showProjectDeletePopup(0);
        }
        document.querySelectorAll('.project-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                var selectedCount = document.querySelectorAll('.project-checkbox:checked').length;
                showProjectDeletePopup(selectedCount);
            });
        });
        function deleteSelectedProjects() {
            const selectedProjectIds = Array.from(document.querySelectorAll('.project-checkbox:checked'))
                .map(checkbox => checkbox.dataset.projectId);
            if (selectedProjectIds.length === 0) {
                alert("Vui lòng chọn ít nhất một dự án để xóa.");
                return;
            }
            const projectListElement = document.getElementById('selectedProjectList');
            projectListElement.innerHTML = '';
            selectedProjectIds.forEach(projectId => {
                const li = document.createElement('li');
                li.textContent = `Dự án: ${projectId}`;
                projectListElement.appendChild(li);
            });
            const deletePopup = document.getElementById('deleteConfirmationPopup');
            deletePopup.style.display = 'flex';
            document.getElementById('confirmDeleteBtn').onclick = function () {

                fetch('/Home/DeleteProjects', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ projectIds: selectedProjectIds })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showNotificationPopup(data.message, "success");
                        } else {
                            showNotificationPopup(data.message, "error");
                        }
                        setTimeout(() => location.reload(), 3000);
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showNotificationPopup("Đã xảy ra lỗi khi xóa dự án.", "error");
                    });
                deletePopup.style.display = 'none';
            };
            document.getElementById('cancelDeleteBtn').onclick = function () {
                deletePopup.style.display = 'none';
            };
        }
        /* --- Delete Popip - END --- */

        /* --- Popup ThongBao - START --- */
        window.onload = function () {
            const urlParams = new URLSearchParams(window.location.search);
            const message = urlParams.get('notificationMessage');
            const type = urlParams.get('notificationType');

            if (message && type) {
                showNotificationPopup(message, type);
            }
        };
        function showNotificationPopup(message, type) {
            const popup = document.getElementById('notificationPopup');
            const messageSpan = document.getElementById('notificationMessage');

            popup.classList.remove('popup-success', 'popup-error');
            if (type === "success") {
                popup.classList.add('popup-success');
            } else if (type === "error") {
                popup.classList.add('popup-error');
            }

            messageSpan.textContent = message;
            popup.style.display = 'flex';
            setTimeout(closeNotificationPopup, 5000);


            setTimeout(function () {
                window.history.pushState({}, document.title, "/Home/DSProject");
            }, 5000);
        }
        function closeNotificationPopup() {
            document.getElementById('notificationPopup').style.display = 'none';
        }
        /* --- Popup Thong Bao - END --- */

        // Function to handle priority selection
        function handlePrioritySelection(modalId) {
            document.querySelectorAll(`#${modalId} .dropdown-item`).forEach(item => {
                item.addEventListener('click', function () {
                    const selectedText = this.innerText;
                    const selectedIconClass = this.querySelector('i').classList;
                    const selectedOption = document.querySelector(`#${modalId} .selected-option span`);
                    const selectedIcon = document.querySelector(`#${modalId} .selected-option i`);

                    selectedOption.textContent = selectedText;
                    selectedIcon.className = ''; // Reset icon class
                    selectedIcon.classList.add(...selectedIconClass);
                });
            });
        }

        // Initialize priority selection for both modals
        handlePrioritySelection('addProjectModal');
        handlePrioritySelection('editProjectModal');

        // File upload handling
        function handleFileUpload() {
            const fileInput = document.getElementById('imageInputAdd');
            const file = fileInput.files[0];
            const fileNameDisplay = document.getElementById('fileName');
            const previewImage = document.getElementById('previewImage');

            if (file) {
                const validExtensions = ['jpg', 'jpeg', 'png', 'gif'];
                const fileExtension = file.name.split('.').pop().toLowerCase();

                if (!validExtensions.includes(fileExtension)) {
                    fileNameDisplay.textContent = "Hãy chọn file hình ảnh (.jpg, .jpeg, .png, .gif)";
                    fileNameDisplay.style.color = "red";
                    fileInput.value = ""; // Reset input if invalid file
                    document.getElementById('imageProject').value = ""; // Clear hidden input value
                    previewImage.style.display = "none"; // Hide preview if error
                } else {
                    document.getElementById('imageProject').value = file.name;
                    fileNameDisplay.textContent = "Selected file: " + file.name;
                    fileNameDisplay.style.color = "#555";
                    previewImage.src = URL.createObjectURL(file);
                    previewImage.style.display = "block"; // Show preview
                }
            }
        }

        // Update ProjectID and other fields when opening the "Edit Project" modal
        document.querySelectorAll('.edit-project-btn').forEach(button => {
            button.addEventListener('click', function () {
                const projectId = this.getAttribute('data-project-id');
                const projectName = this.getAttribute('data-project-name');
                const projectDescription = this.getAttribute('data-project-description');
                const startDate = this.getAttribute('data-start-date');
                const endDate = this.getAttribute('data-end-date');
                const projectPriority = this.getAttribute('data-priority');
                const projectStatus = this.getAttribute('data-status');

                document.getElementById('editProjectID').value = projectId;
                document.getElementById('editProjectName').value = projectName;
                document.getElementById('editDescription').value = projectDescription;
                document.getElementById('editStartDate').value = startDate;
                document.getElementById('editEndDate').value = endDate;

                const priorityDropdown = document.querySelector('#editProjectModal .selected-option span');
                const priorityIcon = document.querySelector('#editProjectModal .selected-option i');
                let iconClass, text;
                switch (projectPriority) {
                    case '1': iconClass = 'fa-angles-up ic1 icon'; text = 'Highest'; break;
                    case '2': iconClass = 'fa-angle-up ic2 icon'; text = 'High'; break;
                    case '3': iconClass = 'fa-bars ic3 icon'; text = 'Medium'; break;
                    case '4': iconClass = 'fa-angle-down ic4 icon'; text = 'Low'; break;
                    case '5': iconClass = 'fa-angles-down ic5 icon'; text = 'Lowest'; break;
                    default: iconClass = 'fa-bars ic3 icon'; text = 'Medium';
                }

                priorityDropdown.textContent = ` ${text}`;
                priorityIcon.className = `fa-solid ${iconClass}`;
                document.getElementById('editStatusProject').value = projectStatus;
            });
        });

        function selectPriority(value, text) {
            document.getElementById('editPriorityValue').value = value;
            const selectedOption = document.querySelector('#editProjectModal .selected-option span');
            const selectedIcon = document.querySelector('#editProjectModal .selected-option i');
            selectedOption.textContent = ` ${text}`;
            selectedIcon.className = ''; // Reset icon class
            selectedIcon.classList.add(`fa-solid`, `fa-${text.toLowerCase().replace(' ', '-')}`, `icon`);
        }

    </script>

    <!-- Bootstrap and JavaScript dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

</div>

