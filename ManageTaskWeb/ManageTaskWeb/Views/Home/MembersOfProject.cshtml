@{
    ViewBag.Title = "MembersOfProject";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model List<ManageTaskWeb.Models.Member>

<link href="@Url.Content("~/Content/css/membersofproject.css?v=1")" rel="stylesheet" />

<div class="memberofproject-breadcrumb">
    <a href="#">Home</a>
    <span>></span>
    <a href="#">Project</a>
    <span>></span>
    <a href="#">Members of Project</a>
</div>

<div class="memberofproject-content">
    <div class="memberofproject-project-section">
        <div class="memberofproject-project-info">
            <h1>Project For HUIT University</h1>
            <div class="project-description">
                <p>Mô tả dự án cho: Câu hỏi thực tập sinh</p>
                <p>- Thiết kế câu hỏi cho thực tập sinh</p>
                <p>- Thực tập sinh: Xem câu hỏi, đưa câu hỏi, xem câu trả lời, xóa câu hỏi, hiển thị danh sách câu hỏi trả lời</p>
                <p>- Admin: Đăng nhập, xem câu hỏi, thêm câu trả lời, xóa câu trả lời, hiển thị danh sách câu hỏi trả lời</p>
            </div>
        </div>

        <div class="memberofproject-owner-status">
            <div class="memberofproject-owner-info">
                <img src="/api/placeholder/50/50" alt="Owner" />
                <div class="memberofproject-owner-details">
                    <div class="name">Phạm Nguyên Vũ (Owner)</div>
                    <div class="date">Create at: 11/10/2024</div>
                </div>
            </div>
            <div class="memberofproject-status-section">
                <div class="memberofproject-status-label">Status</div>
                <button class="memberofproject-status-button">DONE</button>
            </div>
        </div>
    </div>

    <div class="memberofproject-toolbar">
        <!-- Nút thêm thành viên -->
        <button class="memberofproject-add-member-btn" id="addmember">
            <span>+</span> Thêm Thành Viên Mới
        </button>

        <!-- Thanh tìm kiếm nằm giữa -->
        <div class="memberofproject-search-bar">
            <input type="text" placeholder="Tìm kiếm theo mã hoặc tên" />
            <i class="fas fa-search"></i>
        </div>
        <style>
            /* Button chứa văn bản và chấm đỏ */
            .request-icon-wrapper {
                position: relative;
                display: flex;
                align-items: center;
                justify-content: center; /* Văn bản nằm giữa */
                background-color: #f9f9f9;
                border: 1px solid #ccc;
                border-radius: 5px;
                padding: 10px 15px;
                cursor: pointer;
                transition: background-color 0.3s ease, border-color 0.3s ease;
                gap: 10px; /* Khoảng cách giữa các phần tử */
            }

                /* Văn bản trong nút */
                .request-icon-wrapper .button-text {
                    font-size: 14px;
                    font-weight: 500;
                    color: #333;
                }

                /* Chấm đỏ nằm bên phải */
                .request-icon-wrapper .notification-dot {
                    position: absolute;
                    top: 50%; /* Căn giữa theo chiều dọc */
                    right: 10px; /* Cách mép phải 10px */
                    transform: translateY(-50%); /* Đảm bảo căn giữa hoàn hảo */
                    width: 10px;
                    height: 10px;
                    background-color: red;
                    border-radius: 50%;
                    border: 2px solid white; /* Viền trắng bao quanh chấm đỏ */
                }

                /* Hiệu ứng hover */
                .request-icon-wrapper:hover {
                    background-color: #e6e6e6;
                    border-color: #999;
                }
        </style>
        <!-- Biểu tượng giống hình ảnh -->
        <button class="request-icon-wrapper" id="request-button">
            <span class="button-text" onclick="toggleRequest()">Request </span> &nbsp;
            <span class="notification-dot"></span>
        </button>
    </div>

    <div class="memberofproject-members-container">
        <div class="memberofproject-member-list">
            <table>
                <thead>
                    <tr>
                        <th>Staff</th>
                        <th>Create at</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in Model)
                    {
                        <tr>
                            <td>
                                <div class="memberofproject-member-info">
                                    <img src="~/Content/images/member-img/@member.ImageMember" alt="Staff" />
                                    <span>@member.FullName</span>
                                </div>
                            </td>
                            <td>@(member.HireDate.HasValue ? member.HireDate.Value.ToString("dd/MM/yyyy") : "No date available")</td>
                            <td><span class="memberofproject-status-badge status-active">@member.Status</span></td>
                            <td><button class="memberofproject-view-btn">View</button></td>
                        </tr>
                    }
                    <!-- More rows as necessary -->
                </tbody>
            </table>
        </div>

        <div class="memberofproject-member-details">
            <img src="/api/placeholder/60/60" alt="Selected member" />
            <div class="memberofproject-detail-row">
                <span class="memberofproject-detail-label">Username:</span>
                <span>Phạm Nguyên Vũ</span>
            </div>
            <div class="memberofproject-detail-row">
                <span class="memberofproject-detail-label">Email:</span>
                <span>pnv287@gmail.com</span>
            </div>
            <div class="memberofproject-detail-row">
                <span class="memberofproject-detail-label">Phone:</span>
                <span>0123456789</span>
            </div>
            <div class="memberofproject-detail-row">
                <span class="memberofproject-detail-label">Role:</span>
                <span>Staff</span>
            </div>
            <div class="memberofproject-detail-row">
                <span class="memberofproject-detail-label">Status:</span>
                <span>Normal</span>
            </div>
            <div class="memberofproject-action-buttons">
                <button class="memberofproject-action-btn memberofproject-btn-view">View detail</button>
                <button class="memberofproject-action-btn memberofproject-btn-edit">Edit</button>
                <button class="memberofproject-action-btn memberofproject-btn-delete">Delete</button>
            </div>
        </div>
    </div>
</div>


<div class="overlay" id="overlay">
    <div class="blind-container-1">
        <h2>Add Members To Project</h2>
        <div class="close-button">✕</div>
        <div class="member-section">
            <!-- Members List -->
            <div class="panel">
                <h3>Members</h3>
                <div class="search-bar">
                    <input type="text" placeholder="Search Name Members...">
                    <button>🔍</button>
                    <div class="toggle-switch">
                        <input type="checkbox" id="toggle-members">
                        <label for="toggle-members"></label>
                    </div>
                </div>
                <ul class="member-list">
                    <li>
                        <div class="avatar avatar-green"></div>
                        <div class="info">
                            <p>Nguyễn Nhật Quân</p>
                            <span class="role">Developer</span>
                        </div>
                        <button class="add-button">➕</button>
                    </li>
                </ul>
                <div class="pagination">
                    <button>◀</button>
                    <button class="active">1</button>
                    <button>2</button>
                    <button>3</button>
                    <button>▶</button>
                </div>
            </div>

            <!-- Members In Project -->
            <div class="panel">
                <h3>Members In Project</h3>
                <div class="search-bar">
                    <input type="text" placeholder="Search Name Members...">
                    <button>🔍</button>
                    <div class="toggle-switch">
                        <input type="checkbox" id="toggle-project-members">
                        <label for="toggle-project-members"></label>
                    </div>
                </div>
                <ul class="member-list">
                    <li>
                        <div class="avatar avatar-yellow"></div>
                        <div class="info">
                            <p>Phạm Nguyên Vũ</p>
                            <span class="role project-manager">Project Manager</span>
                        </div>
                    </li>
                </ul>
                <div class="pagination">
                    <button>◀</button>
                    <button class="active">1</button>
                    <button>2</button>
                    <button>3</button>
                    <button>▶</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="overlay-2" id="overlay-2">
    <div class="container-blind-2">
        <h2>Request <span class="icon">📄</span></h2>
        <div class="close-button">✕</div>
        <ul class="request-list">
            <li>
                <div class="avatar avatar-green"></div>
                <div class="info">
                    <p></p>
                    <span class="role"></span>
                </div>
                <button class="accept-button">✔ Accept</button>
                <button class="reject-button">✖ Reject</button>
            </li>
        </ul>
        <div class="pagination">
            <button>◀</button>
            <button class="active">1</button>
            <button>2</button>
            <button>3</button>
            <button>▶</button>
        </div>
    </div>
</div>
<script>
function toggleRequest() {
    var overlay = document.getElementById('overlay-2');
    var requestList = document.querySelector('.request-list');
    overlay.style.visibility = 'visible';

    var projectId = '@ViewBag.ProjectId'; // Get ProjectID from ViewBag
    fetch(`/Home/GetJoinRequests?projectId=${projectId}`)
        .then(response => response.json())
        .then(data => {
            requestList.innerHTML = ''; // Clear previous requests

            if (data.length === 0) {
                // No requests
                var li = document.createElement('li');
                li.classList.add('no-requests');
                li.innerHTML = `<p>No join requests</p>`;
                requestList.appendChild(li);
            } else {
                // Create new request list
                data.forEach(request => {
                    var li = document.createElement('li');
                    li.classList.add('notification');
                    li.setAttribute('data-id', request.NotificationIDs[0]);

                    li.innerHTML = `
                        <div class="avatar avatar-green"></div>
                        <div class="info">
                            <p>${request.FullName}</p>
                            <span class="role">${request.Role}</span>
                            <span class="notification-id">Notification ID: ${request.NotificationIDs[0]}</span>
                        </div>
                        <button class="accept-button" data-notificationid="${request.NotificationIDs[0]}">✔ Accept</button>
                        <button class="reject-button" data-notificationid="${request.NotificationIDs[0]}">✖ Reject</button>
                    `;
                    requestList.appendChild(li);
                });

                // Add event listeners for new buttons
                document.querySelectorAll('.accept-button').forEach(button => {
                    button.addEventListener('click', function () {
                        var notificationId = this.getAttribute('data-notificationid');
                        acceptProjectRequest(notificationId);
                    });
                });

                document.querySelectorAll('.reject-button').forEach(button => {
                    button.addEventListener('click', function () {
                        var notificationId = this.getAttribute('data-notificationid');
                        rejectProjectRequest(notificationId);
                    });
                });
            }
        })
        .catch(error => console.error('Error fetching join requests:', error));
}


    function acceptProjectRequest(notificationId) {
        fetch(`/Home/AcceptJoinRequest?notificationId=${notificationId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            }
        })
            .then(response => response.json())
            .then(data => {
                alert(data.message); // Display the server message
                if (data.success) {
                    toggleRequest(); // Reload the request list after accepting
                }
            })
            .catch(error => {
                console.error('Error accepting join request:', error);
                alert('There was an error while processing your request: ' + error.message); // Display error message
            });
    }

    function rejectProjectRequest(notificationId) {
        const notificationElement = document.querySelector(`.notification[data-id="${notificationId}"]`);
        if (!notificationElement) return;

        // Check if input already exists
        if (notificationElement.querySelector('.reject-reason')) return;

        const input = document.createElement('input');
        input.type = 'text';
        input.placeholder = 'Enter reject reason...';
        input.classList.add('reject-reason', 'form-control', 'mt-2');

        const confirmButton = document.createElement('button');
        confirmButton.textContent = 'Confirm';
        confirmButton.classList.add('btn', 'btn-primary', 'mt-2');

        confirmButton.addEventListener('click', function () {
            const reason = input.value.trim();
            if (!reason) {
                alert('Please enter a reason.');
                return;
            }

            fetch(`/Home/RejectJoinRequest`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    notificationId: notificationId,
                    reason: reason
                })
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message); // Display server message
                    if (data.success) {
                        toggleRequest(); // Reload the request list after rejecting
                    }
                })
                .catch(error => {
                    console.error('Error rejecting join request:', error);
                    alert('There was an error while rejecting your request.');
                });
        });

        // Add input and confirm button to the UI
        notificationElement.appendChild(input);
        notificationElement.appendChild(confirmButton);
    }












    document.getElementById('addmember').addEventListener('click', function () {
        var overlay = document.getElementById('overlay');
        overlay.style.visibility = 'visible'; // Hiển thị overlay
    });
    document.querySelectorAll('.close-button').forEach(function (closeButton) {
        closeButton.addEventListener('click', function () {
            // Check if it's for the first or second overlay
            var overlay2 = document.getElementById('overlay-2');
            var overlay = document.getElementById('overlay');
            if (closeButton.closest('.container-blind-2')) {
                overlay2.style.visibility = 'hidden'; // Hide the second overlay
            } else if (closeButton.closest('.blind-container-1')) {
                overlay.style.visibility = 'hidden'; // Hide the first overlay
            }
        });
    });

</script>


