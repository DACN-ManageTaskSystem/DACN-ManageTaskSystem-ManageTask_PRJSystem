@{
    ViewBag.Title = "Danh Sách Thành Viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model List<ManageTaskWeb.Models.Member>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        .container {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
            .header a {
                text-decoration: none;
                color: #6c63ff;
                font-size: 1.2rem;
                transition: color 0.3s ease;
            }

                .header a:hover {
                    color: #4a4a8c;
                }

            .header h1 {
                font-size: 24px;
                color: #333;
               
            }

            .header button {
                background-color: #007bff;
                color: white;
                border: none;
                padding: 10px 15px;
                border-radius: 5px;
                cursor: pointer;
            }

                .header button:hover {
                    background-color: #0056b3;
                }

        .search-bar {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            background-color: #ffffff;
            padding: 10px 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

            .search-bar input, .search-bar select {
                padding: 10px;
                margin-right: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
                width: 70%;
            }
            .search-bar button {
                background: none;
                border: none;
                font-size: 1.2rem;
                color: #6c63ff;
                cursor: pointer;
                transition: color 0.3s ease;
            }

                .search-bar button:hover {
                    color: #4a4a8c;
                }
        table {
            width: 100%;
            border-collapse: collapse;
        }

            table th, table td {
                padding: 12px;
                text-align: left;
                border-bottom: 1px solid #ddd;
            }

        .actions i {
            margin: 0 5px;
            cursor: pointer;
        }

            .actions i.edit {
                color: #007bff;
            }

            .actions i.delete {
                color: #dc3545;
            }

        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

            .pagination a {
                padding: 10px 15px;
                margin: 0 5px;
                border: 1px solid #ddd;
                border-radius: 4px;
                text-decoration: none;
                color: #007bff;
            }

                .pagination a.active {
                    background-color: #007bff;
                    color: white;
                }
      
        .modal-content {
            border-radius: 15px;
            padding: 30px;
            border: none;
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);
            width:600px;
        }
        .modal-header {
            border-bottom: none;
            padding-bottom: 0;
            display: flex;
            justify-content: space-between;
            align-items: center;
            
        }

        .modal-title {
            font-size: 1.8rem;
            color: #4a4a8c;
            font-weight: 600;
        }

        .btn-close {
            background: transparent;
            border: none;
            font-size: 1.5rem;
            color: #a0a0a0;
            cursor: pointer;
        }

        .modal-body {
            display: flex;
            gap: 20px;
        }

        .column {
            flex: 1;
            min-width: 250px;
        }

        label {
            font-weight: 500;
            color: #555;
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"],
        input[type="date"],
        textarea,
        select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f4f4f4;
            font-size: 0.9rem;
            color: #333;
            margin-bottom: 15px;
            transition: border-color 0.3s ease;
        }

            input[type="text"]:focus,
            input[type="date"]:focus,
            textarea:focus,
            select:focus {
                border-color: #6c63ff;
                outline: none;
            }

        textarea {
            resize: none;
            height: 80px;
        }

        .form-select {
            appearance: none;
            background-image: url('data:image/svg+xml,%3Csvg width="16" height="16" fill="%234a4a8c" xmlns="http://www.w3.org/2000/svg"%3E%3Cpath d="M7.293 10.707a1 1 0 0 0 1.414 0l3-3a1 1 0 0 0-1.414-1.414L8 8.586 5.707 6.293a1 1 0 0 0-1.414 1.414l3 3z"/%3E%3C/svg%3E');
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 1em;
            padding-right: 2.5em;
        }

        .btn-upload {
            display: inline-flex;
            align-items: center;
            background-color: #ffdd57;
            border: none;
            color: #333;
            padding: 8px 15px;
            border-radius: 8px;
            font-weight: 500;
            cursor: pointer;
            gap: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s ease;
        }

            .btn-upload:hover {
                background-color: #e6c751;
            }

        .modal-footer {
            border-top: none;
            padding-top: 10px;
            display: flex;
            justify-content: center;
        }

    </style>
    <body>
        <div class="container">
            <br />
            <div class="header">
                <div>
                    <a href="/Home/TrangChu"><i class="fas fa-home"></i> Home</a> > <a href="#">Members</a>
                </div>

                <button type="button" data-bs-toggle="modal" data-bs-target="#addMemberModal">+ Thêm Thành Viên</button>

            </div>

            <!-- Thông báo thành công hoặc lỗi -->
            @if (TempData["notificationMessage"] != null)
            {
                <div class="alert alert-@TempData["notificationType"]" role="alert">
                    @TempData["notificationMessage"]
                </div>
            }

            <form method="get" action="@Url.Action("DSMember")">
                <div class="search-bar">
                    <!-- Tìm kiếm theo tên hoặc email -->
                    <input type="text" name="searchQuery" placeholder="Tìm kiếm theo tên hoặc email" value="@ViewBag.SearchQuery" />

                    <!-- Nút tìm kiếm -->
                    <button type="submit" id="searchBtn"><i class="fas fa-search"></i></button>

                    <!-- Lọc theo vai trò -->
                    <select name="role" id="roleSelect">
                        <option value="">Tất cả vai trò</option>
                        <option value="Admin" @(ViewBag.Role == "Admin" ? "selected" : "")>Manager</option>
                        <option value="Manager" @(ViewBag.Role == "Manager" ? "selected" : "")>Manager</option>
                        <option value="Developer" @(ViewBag.Role == "Developer" ? "selected" : "")>Developer</option>
                        <option value="HR" @(ViewBag.Role == "HR" ? "selected" : "")>HR</option>
                    </select>

                    <!-- Lọc theo trạng thái -->
                    <select name="status" id="statusSelect">
                        <option value="">Tất cả trạng thái</option>
                        <option value="true" @(ViewBag.Status == "true" ? "selected" : "")>Active</option>
                        
                    </select>
                </div>
            </form>
            <div id="mainContent">
                <table>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Họ và Tên</th>
                            <th>Email</th>
                            <th>Điện Thoại</th>
                            <th>Vai Trò</th>
                            <th>Ngày Vào Làm</th>
                            <th>Thành Viên</th>
                            <th>Trạng Thái</th>
                            <th>Thao Tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var member in Model)
                            {
                                <tr data-id="@member.MemberID">
                                    <td>@member.MemberID</td>
                                    <td>@member.FullName</td>
                                    <td>@member.Email</td>
                                    <td>@member.Phone</td>
                                    <td>@member.Role</td>
                                    <td>@member.HireDate.Value.ToString("dd/MM/yyyy")</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(member.ImageMember))
                                        {
                                            <img src="@Url.Content("~/Content/images/member-img/" + member.ImageMember)" alt="@member.FullName" width="80" height="80" style="object-fit: cover;" />
                                        }
                                        else
                                        {
                                            <span>Không có ảnh</span>
                                        }

                                    </td>

                                    <td>@member.Status</td>
                                    <td class="actions">
                                        <i class="fas fa-edit edit" data-bs-toggle="modal" data-bs-target="#editMemberModal"
                                           onclick="editMember('@member.MemberID')"></i>
                                        <i class="fas fa-trash delete" onclick="deleteMember('@member.MemberID')"></i>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="8" style="text-align: center;">Không có thành viên nào</td>
                            </tr>
                        }
                    </tbody>
                </table>
                </div>
                <div class="pagination">
                    @if (ViewBag.TotalRecords > 0)
                    {
                        int totalPages = (int)Math.Ceiling((double)ViewBag.TotalRecords / ViewBag.PageSize);
                        for (int i = 1; i <= totalPages; i++)
                        {
                            <a href="#"
                               class="page-link @(ViewBag.CurrentPage == i ? "active" : "")"
                               data-page="@i">
                                @i
                            </a>
                        }
                    }
                </div>
                


            </div>

            <!-- Add Member Modal -->
            <div class="modal fade" id="addMemberModal" tabindex="-1" aria-labelledby="addMemberModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addMemberModalLabel">Add New Member</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                        </div>

                        <form action="/Home/AddMember" method="post" enctype="multipart/form-data">
                            <div class="modal-body">
                                <!-- Left Column -->
                                <div class="column">
                                    <label for="fullName">Full Name *</label>
                                    <input type="text" class="form-control" name="FullName" id="fullName" placeholder="Enter full name..." required>

                                    <label for="email">Email *</label>
                                    <input type="email" class="form-control" name="Email" id="email" placeholder="Enter email..." required>

                                    <label for="password">Password *</label>
                                    <input type="password" class="form-control" name="Password" id="password" placeholder="Enter Password..." required>

                                    <label for="phone">Phone Number *</label>
                                    <input type="text" class="form-control" name="Phone" id="phone" placeholder="Enter phone number..." required>

                                    <label for="role">Role *</label>
                                    <select class="form-select" name="Role" id="role">
                                        <option>Admin</option>
                                        <option>Manager</option>
                                        <option>Developer</option>
                                        <option>HR</option>
                                    </select>
                                </div>

                                <!-- Right Column -->
                                <div class="column">
                                    <label for="hireDate">Hire Date *</label>
                                    <input type="date" class="form-control" name="HireDate" id="hireDate" required>

                                    <label for="imageFile">Profile Image</label>
                                    <p id="fileName" style="margin: 5px 0; font-size: 0.9em; color: #555;"></p>
                                    <button type="button" class="btn-upload" id="uploadBtnAdd" onclick="document.getElementById('imageInputAdd').click();">
                                        <i class="fas fa-upload"></i> Upload
                                    </button>
                                    <input type="file" name="ImageFile" id="imageInputAdd" style="display: none;" onchange="handleFileUpload()" />
                                    <img id="previewImage" src="" alt="Preview" style="display: none; margin-top: 10px; width: 100px; height: 100px; border: 1px solid #ddd; object-fit: cover;">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Confirm</button>
                            </div>
                        </form>

                    </div>
                </div>
            </div>

            <!-- Edit Member Modal -->
            <div class="modal fade" id="editMemberModal" tabindex="-1" aria-labelledby="editMemberModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editMemberModalLabel">Edit Member</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
                        </div>
                        <form action="/Home/EditMember" method="post" enctype="multipart/form-data">
                            <div class="modal-body">
                                <!-- Left Column -->
                                <div class="row">
                                    <!-- Hidden Field for Member ID -->
                                    <input type="hidden" id="memberId" name="MemberID">

                                    <div class="col-md-6">
                                        <!-- Full Name -->
                                        <div class="mb-3">
                                            <label for="fullNameEdit" class="form-label">Full Name *</label>
                                            <input type="text" class="form-control" id="fullNameEdit" name="FullName" placeholder="Enter your full name..." required>
                                        </div>

                                        <!-- Email -->
                                        <div class="mb-3">
                                            <label for="emailEdit" class="form-label">Email *</label>
                                            <input type="email" class="form-control" id="emailEdit" name="Email" placeholder="Enter your email..." required>
                                        </div>

                                        <!-- Phone -->
                                        <div class="mb-3">
                                            <label for="phoneEdit" class="form-label">Phone *</label>
                                            <input type="text" class="form-control" id="phoneEdit" name="Phone" placeholder="Enter your phone..." required>
                                        </div>

                                        <!-- Role -->
                                        <div class="mb-3">
                                            <label for="roleEdit" class="form-label">Role *</label>
                                            <select class="form-select" id="roleEdit" name="Role" required>
                                                <option value="Admin">Admin</option>
                                                <option value="Manager">Manager</option>
                                                <option value="Developer">Developer</option>
                                                <option value="HR">HR</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <!-- Hire Date -->
                                        <div class="mb-3">
                                            <label for="hireDateEdit" class="form-label">Hire Date *</label>
                                            <input type="date" class="form-control" id="hireDateEdit" name="HireDate" value="@(Session["HireDate"] != null ? DateTime.Parse(Session["HireDate"].ToString()).ToString("yyyy-MM-dd") : "")" required>
                                        </div>

                                        <!-- Current Image -->
                                        <div class="mb-3">
                                            <label class="form-label">Current Member Photo</label>
                                            <img id="currentImage" src="" alt="currentmemberphoto" class="img-fluid rounded" style="max-width: 100px; margin-top: 10px; border: 1px solid #ddd;">
                                        </div>

                                        <!-- New Image -->
                                        <div class="mb-3">
                                            <label for="imageEdit" class="form-label">Profile Image</label>
                                            <input type="file" class="form-control" id="imageEdit" name="ImageFile" accept="image/*">
                                            <img id="previewImageEdit" src="" alt="Preview" style="display: none; margin-top: 10px; width: 100px; height: 100px; border: 1px solid #ddd; object-fit: cover;">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Confirm</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>





            <script>
                $(document).on("click", ".page-link", function (e) {
                    e.preventDefault();

                    const page = $(this).data("page");
                    const searchQuery = $('input[name="searchQuery"]').val();
                    const role = $('#roleSelect').val();
                    const status = $('#statusSelect').val();

                    $.ajax({
                        url: '/Home/DSMember',
                        type: 'GET',
                        data: { page, searchQuery, role, status },
                        success: function (response) {
                            $('table tbody').html($(response).find('table tbody').html());
                            $('.pagination').html($(response).find('.pagination').html());
                        },
                        error: function (xhr, status, error) {
                            console.error("Lỗi:", error);
                        }
                    });
                });



                /*===============================================================*/
                //EditMember
                function editMember(memberID) {
                    const row = document.querySelector(`tr[data-id="${memberID}"]`);
                    if (!row) {
                        console.error("Không tìm thấy hàng với ID:", memberID);
                        return;
                    }
                    // Lấy dữ liệu từ các cột trong hàng
                    const fullName = row.querySelector("td:nth-child(2)").innerText.trim();
                    const email = row.querySelector("td:nth-child(3)").innerText.trim();
                    const phone = row.querySelector("td:nth-child(4)").innerText.trim();
                    const role = row.querySelector("td:nth-child(5)").innerText.trim();
                    const hireDate = row.querySelector("td:nth-child(6)").innerText.trim();
                    const imageSrc = row.querySelector("td:nth-child(7) img") ? row.querySelector("td:nth-child(7) img").src : '';

                    // Kiểm tra và gán ảnh
                    if (imageSrc) {
                        document.getElementById("currentImage").src = imageSrc;
                    } else {
                        document.getElementById("currentImage").src = '/Content/images/default-avatar.jpg';
                    }

                    // Gán dữ liệu vào modal
                    document.getElementById("memberId").value = memberID;
                    document.getElementById("fullNameEdit").value = fullName;
                    document.getElementById("emailEdit").value = email;
                    document.getElementById("phoneEdit").value = phone;
                    document.getElementById("roleEdit").value = role;

                    // Fix the date formatting
                    const hireDateText = row.querySelector("td:nth-child(6)").innerText.trim();
                    const [day, month, year] = hireDateText.split('/');
                    const formattedDate = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;
                    document.getElementById("hireDateEdit").value = formattedDate;
                }

                /*===============================================================*/
                /*===============================================================*/
                //Xóa Member
                function deleteMember(id) {
                    if (confirm("Bạn có chắc chắn muốn xóa thành viên này?")) {
                        $.ajax({
                            url: '/Home/DeleteMember',
                            type: 'POST',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({ memberIds: [id] }), // Gửi danh sách memberIds
                            success: function (response) {
                                if (response.success) {
                                    alert(response.message);  // Hiển thị thông báo thành công
                                    const row = document.querySelector(`tr[data-id="${id}"]`);
                                    if (row) {
                                        row.remove();  // Xóa dòng ngay lập tức
                                    }
                                } else {
                                    alert(response.message); // Hiển thị thông báo lỗi
                                }
                            },
                            error: function () {
                                alert("Có lỗi xảy ra khi xóa thành viên.");
                            }
                        });
                    }
                }
                /*===============================================================*/
                /*===============================================================*/
                //Tìm kiếm theo tên hoặc email, trạng thái, vai trò
                document.getElementById("searchBtn").addEventListener("click", function () {
                    var input = document.getElementById("searchInput").value.toLowerCase(); // Thay đổi ID của input tìm kiếm
                    var rows = document.querySelectorAll(".member-row"); // Thay đổi class của các hàng thành viên

                    rows.forEach(function (row) {
                        var fullName = row.querySelector("td:nth-child(2)").textContent.toLowerCase(); // Tìm kiếm theo tên hoặc email (cột thứ 2 là "Họ và tên")
                        var email = row.querySelector("td:nth-child(3)").textContent.toLowerCase(); // Cột thứ 3 là "Email"

                        if (fullName.includes(input) || email.includes(input)) { // Tìm kiếm cả tên và email
                            row.style.display = "";
                        } else {
                            row.style.display = "none";
                        }
                    });
                });

                let currentRoleFilter = "";
                let currentStatusFilter = "";

                // Lắng nghe sự kiện thay đổi vai trò
                document.getElementById("roleSelect").addEventListener("change", function () {
                    currentRoleFilter = this.value; // Lưu giá trị đã chọn
                    updateFilters();
                });

                // Lắng nghe sự kiện thay đổi trạng thái
                document.getElementById("statusSelect").addEventListener("change", function () {
                    currentStatusFilter = this.value; // Lưu giá trị đã chọn
                    updateFilters();
                });

                // Cập nhật các bộ lọc
                function updateFilters() {
                    // Lấy giá trị tìm kiếm
                    let searchQuery = document.querySelector("[name='searchQuery']").value;

                    // Cập nhật giá trị trong form (role và status)
                    document.querySelector("[name='role']").value = currentRoleFilter;
                    document.querySelector("[name='status']").value = currentStatusFilter;

                    // Gửi lại form với các giá trị lọc đã chọn
                    document.querySelector("form").submit();
                }
                /*===============================================================*/

                //Upload file
                function handleFileUpload() {
                    const fileInput = document.getElementById('imageInputAdd');
                    const file = fileInput.files[0];
                    const fileNameDisplay = document.getElementById('fileName');
                    const previewImage = document.getElementById('previewImage');

                    if (file) {
                        const validExtensions = ['jpg', 'jpeg', 'png', 'gif'];
                        const fileExtension = file.name.split('.').pop().toLowerCase();

                        // Validate the file type
                        if (!validExtensions.includes(fileExtension)) {
                            fileNameDisplay.textContent = "Hãy chọn file hình ảnh (.jpg, .jpeg, .png, .gif)";
                            fileNameDisplay.style.color = "red";
                            fileInput.value = ""; // Reset input if invalid file
                            document.getElementById('imageProject').value = ""; // Clear hidden input value
                            previewImage.style.display = "none"; // Hide preview if error
                        } else {
                            // Display file name and show preview
                            document.getElementById('imageProject').value = file.name;
                            fileNameDisplay.textContent = "Selected file: " + file.name;
                            fileNameDisplay.style.color = "#555";
                            previewImage.src = URL.createObjectURL(file);
                            previewImage.style.display = "block"; // Show preview

                            // Optional: Clean up object URL to avoid memory leak
                            previewImage.onload = () => {
                                URL.revokeObjectURL(previewImage.src);
                            };
                        }
                    }
                }




            </script>
</body>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
