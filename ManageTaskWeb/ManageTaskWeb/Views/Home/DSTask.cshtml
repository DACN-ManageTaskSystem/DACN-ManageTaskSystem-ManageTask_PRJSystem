@{
    ViewBag.Title = "DSTask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model List<ManageTaskWeb.Models.Task>

<html>
<head>
    <title>
        Task Management
    </title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Details</title>
    <!-- FontAwesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Google Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/css/task.css" rel="stylesheet" />
</head>
<body>
    <div class="header">
        <div>
            <a href="/Home/TrangChu"><i class="fas fa-home"></i> Home</a> > <a href="#">Tasks</a>
        </div>

    </div>
    <div class="search-bar">
        <input placeholder="Enter Task name..." type="text" />
        <button>
            <i class="fas fa-search">
            </i>
        </button>
    </div>

    <div class="task-board">
        <!-- ON HOLD Column -->
        <div class="task-column">
            <h2 style="background-color: rgba(56, 155, 253, 1)">ON HOLD</h2>
            @foreach (var task in Model.Where(t => t.Status == "On Hold").OrderBy(t => t.Priority))
            {
                <div class="task" style="background-color: @{
                string taskBackgroundColor;
                if (task.Priority == 1)
                {
                    taskBackgroundColor = "#FFCFB3";
                }
                else if (task.Priority == 2)
                {
                    taskBackgroundColor = "#FFDDAE";
                }
                else if (task.Priority == 3)
                {
                    taskBackgroundColor = "#FFF8DE";
                }
                else if (task.Priority == 4)
                {
                    taskBackgroundColor = "#D0E8C5";
                }
                else if (task.Priority == 5)
                {
                    taskBackgroundColor = "#D4F6FF";
                }
                else
                {
                    taskBackgroundColor = "#F5F5F7";
                }
                @taskBackgroundColor;
            }">
                    <div class="task-info">
                        <p>@task.Description</p>
                        <p>Start: @(task.StartDate.HasValue ? task.StartDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                        <p>End: @(task.EndDate.HasValue ? task.EndDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                    </div>
                    <img alt="User Image" height="40" src="" width="40" />
                </div>
            }
            <div class="create-issue">+ Create Issue</div>
        </div>

        <!-- IN PROGRESS Column -->
        <div class="task-column">
            <h2 style="background-color: rgba(56, 155, 253, 1)">IN PROGRESS</h2>
            @foreach (var task in Model.Where(t => t.Status == "In Progress").OrderBy(t => t.Priority))
            {
                <div class="task" style="background-color: @{
                string taskBackgroundColor;
                if (task.Priority == 1)
                {
                    taskBackgroundColor = "#FFCFB3";
                }
                else if (task.Priority == 2)
                {
                    taskBackgroundColor = "#FFDDAE";
                }
                else if (task.Priority == 3)
                {
                    taskBackgroundColor = "#FFF8DE";
                }
                else if (task.Priority == 4)
                {
                    taskBackgroundColor = "#D0E8C5";
                }
                else if (task.Priority == 5)
                {
                    taskBackgroundColor = "#D4F6FF";
                }
                else
                {
                    taskBackgroundColor = "#F5F5F7";
                }
                @taskBackgroundColor;
            }">
                    <div class="task-info">
                        <p>@task.Description</p>
                        <p>Start: @(task.StartDate.HasValue ? task.StartDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                        <p>End: @(task.EndDate.HasValue ? task.EndDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                    </div>
                    <img alt="User Image" height="40" src="" width="40" />
                </div>
            }
            <div class="create-issue">+ Create Issue</div>
        </div>

        <!-- IN REVIEW Column -->
        <div class="task-column">
            <h2 style="background-color: rgba(56, 155, 253, 1)">IN REVIEW</h2>
            @foreach (var task in Model.Where(t => t.Status == "Pending").OrderBy(t => t.Priority))
            {
                <div class="task" style="background-color: @{
                string taskBackgroundColor;
                if (task.Priority == 1)
                {
                    taskBackgroundColor = "#FFCFB3";
                }
                else if (task.Priority == 2)
                {
                    taskBackgroundColor = "#FFDDAE";
                }
                else if (task.Priority == 3)
                {
                    taskBackgroundColor = "#FFF8DE";
                }
                else if (task.Priority == 4)
                {
                    taskBackgroundColor = "#D0E8C5";
                }
                else if (task.Priority == 5)
                {
                    taskBackgroundColor = "#D4F6FF";
                }
                else
                {
                    taskBackgroundColor = "#F5F5F7";
                }
                @taskBackgroundColor;
            }">
                    <div class="task-info">
                        <p>@task.Description</p>
                        <p>Start: @(task.StartDate.HasValue ? task.StartDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                        <p>End: @(task.EndDate.HasValue ? task.EndDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                    </div>
                    <img alt="User Image" height="40" src="" width="40" />
                </div>
            }
            <div class="create-issue">+ Create Issue</div>
        </div>

        <!-- DONE Column -->
        <div class="task-column">
            <h2 style="background-color: rgba(56, 155, 253, 1)">DONE</h2>
            @foreach (var task in Model.Where(t => t.Status == "Completed").OrderBy(t => t.Priority))
            {
                <div class="task" style="background-color: @{
                string taskBackgroundColor;
                if (task.Priority == 1)
                {
                    taskBackgroundColor = "#FFCFB3";
                }
                else if (task.Priority == 2)
                {
                    taskBackgroundColor = "#FFDDAE";
                }
                else if (task.Priority == 3)
                {
                    taskBackgroundColor = "#FFF8DE";
                }
                else if (task.Priority == 4)
                {
                    taskBackgroundColor = "#D0E8C5";
                }
                else if (task.Priority == 5)
                {
                    taskBackgroundColor = "#D4F6FF";
                }
                else
                {
                    taskBackgroundColor = "#F5F5F7";
                }
                @taskBackgroundColor;
            }">
                    <div class="task-info">
                        <p>@task.Description</p>
                        <p>Start: @(task.StartDate.HasValue ? task.StartDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                        <p>End: @(task.EndDate.HasValue ? task.EndDate.Value.ToString("HH:mm dd/MM/yyyy") : "N/A")</p>
                    </div>
                    <img alt="User Image" height="40" src="" width="40" />
                </div>
            }
            <div class="create-issue">+ Create Issue</div>
        </div>
    </div>


</body>
</html>
